import java.util.*;

/**
 * -------------------------------------아이디어
 * 1. 해쉬map을 사용하자.
 *
 * -------------------------------------구현
 * 1. HashMap(key,value)의 자료구조를 만들자. ( 기본자료형(int) 대신 Wrapper(Integer)형 자료구조를 써야한다.)
 * 2. HashMap.put(key,value) : key 값에 value 를 넣으라는 메서드
 * 3. HashMap.getOrDefault(value, defaultValue) : value를 가져오되 value값이 없으면 defaultValue를 넣으라는 메서드
 * 4. HashMap.keySet() : 존재하는 key들로 이루어진 Set 자료구조를 return 하는 메서드
 * + HashMap.containsKey(key) : key값이 존재하는지 안하는지 boolean 을 return하는 메서드
 * + HashMap.size() : key의 개수(int)를 return하는 메서드
 * + HashMap.remove(key) : 해당 key를 삭제하고, 그 key의 value를 return하는 메서드
 */
import java.util.*;
class Main {
    public char solution(int n, String s) {
        char answer = ' ';
        HashMap<Character, Integer> map = new HashMap<>();
        for(char x : s.toCharArray()){
            map.put(x,map.getOrDefault(x,0)+1);
        }

//        System.out.println(map.containsKey('K'));
//        System.out.println(map.size()); // 5
//        System.out.println(map.remove('A')); // 'A' 의 value
//        System.out.println(map.size()); // 4
        
        int max = Integer.MIN_VALUE;
        for(char key : map.keySet()){
//            System.out.println(key + " "+ map.get(key));
            if(map.get(key) > max){
                max = map.get(key);
                answer =key;
            }
        }
        return answer;
    }
//15
//BACBACCACCBDEDE
    public static void main(String[] args){
        Main T = new Main();
        Scanner kb = new Scanner(System.in);
        int n=kb.nextInt();
        String str=kb.next();
        System.out.println(T.solution(n, str));
    }
}