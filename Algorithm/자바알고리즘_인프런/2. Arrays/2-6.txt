/**
 * 1. StringBulider(int capacity) int값을 넣으면 가능공간 값이 들어간다.
 *
 * 2. 소수는 제곱근 까지 나누어서 나누어 지지 않으면, 소수임을 유추해 낼 수 있다.
 */

import java.util.*;
class Main {
    public ArrayList<Integer> solution(int n, int[] arr){
        ArrayList<Integer> answer = new ArrayList<Integer>();

        int[] reverse = new int[n];

        for(int i=0; i<n ; i++){
            String strNum = String.valueOf(arr[i]);
            StringBuilder sb = new StringBuilder(strNum);
            //System.out.print(Integer.parseInt(sb.reverse().toString())+ "/");
            int reverseNum = Integer.parseInt(sb.reverse().toString());

            // 소수 판별코드작성
            if(reverseNum > 1){
                Boolean isPrime = true;
                for(int j = 2; j<=Math.sqrt(reverseNum); j++){
                    if(reverseNum % j == 0) isPrime = false;
                }

                if(isPrime == true) answer.add(reverseNum);
            }
        }
        return answer;
    }

    public static void main(String[] args) {
        Main T = new Main();
        Scanner kb = new Scanner(System.in);
        int n = kb.nextInt();
        int[] arr = new int[n];
        for(int i =0; i<n; i++){
            arr[i] = kb.nextInt();
        }

        for(int x : T.solution(n, arr)){
            System.out.print(x + " ");
        }
    }
}
