import java.util.*;
/**
 * 선택 정렬
 * 오름차순
 * -----------------------------아이디어
 *  오름차순이므로 가장 작은 값을 왼쪽으로 옮긴다고 하자.
 *  1. idx : i번째로 가장 작은 값을 가질떄의 index
 *  2. i와 j(i+1~n) index에 존재하는 값중에 가장 작은 값을 arr[idx]에 저장한다.
 *  3. arr[i]와 arr[idx]를 교환해준다. -> i index에 i번쨰로 작은 값이 들어가고, idx index에 arr[i]의 값이 들어갈 것이다.
 * -----------------------------구현
 * 1. idx = i ; for( j= i+1 ~ n) 일떄, if(arr[j] < arr[idx]) idx = j;
 * 2. arr[i] <-> arr[idx]
 * 3. arr[i] 에 i번째로 작은 값이 들어감.
 */

//6
//13 5 11 7 23 15

class Main {
    public int[] solution(int n, int[] arr) {
        int[] answer = new int[n];
        int max = Integer.MIN_VALUE;
        for(int i =0; i < n-1 ; i++){   // 어차피 마지막까지 안가도 그전에 n-2 index에서 j(i+1)과 비교하여 정렬이 된다.
            int idx = i;
            for(int j = i+1; j < n ; j++){
                if(arr[j] < arr[idx]){
                    idx =j;                 // 주어진 조건에서 가장 작은값을때의 index
                }
            }
            int tmp = arr[idx];
            arr[idx] = arr[i];
            arr[i] = tmp;
            for(int x :arr){
                System.out.print(x + " ");
            }
            System.out.println();
        }
       return arr;
    }

    public static void main(String[] args){
        Main T = new Main();
        Scanner in=new Scanner(System.in);
        int n = in.nextInt();
        int[] arr = new int[n];

        for(int i=0 ; i<n; i++){
            arr[i] = in.nextInt();
        }
       for(int x : T.solution(n,arr)){
           System.out.print(x + " ");
       }
    }
}