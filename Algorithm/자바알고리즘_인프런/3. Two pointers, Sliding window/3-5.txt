/**
 * ------------------------투 포인터를 이용하여 O(N)으로 문제 해결하기 -----------------------------
 * 1. 특정 연속구간 lt~rt로 이루어지도록 투포인터를 만들 것이다.
 * 2. 맨처음은 rt 값만 존재한다.(배열의 첫번째 값) 또한 sum은 lt~rt 연속된 부분의 합이다.
 * 3. 주어진값(M) 보다 sum이 작으면 rt를 증가시킨다.(배열의 값을 추가하는 과정)
 * 4. 주어진값(M) 보다 sum이 크면 lt를 증가시킨다.(배열의 값을 빼내는 과정)
 * 5. 같을때는 lt, rt 둘다 증가해야한다.
 */

import java.util.*;
class Main {
    public int solution(int n) {
        int answer =0, sum=0, lt = 1;

        for(int rt=1 ; rt<n;rt++){
            sum += rt;
            if(sum == n) answer++;
            while(sum >= n){
                sum -= lt++;
                if(sum == n) answer++;
            }
        }
        return answer;
    }
    public static void main(String[] args){
        Main T = new Main();
        Scanner kb = new Scanner(System.in);
        int n=kb.nextInt();

        /**
15
   3
         */
        System.out.println(T.solution(n));
    }
}